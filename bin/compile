#!/usr/bin/env ruby

# sync output
$stdout.sync = true

$:.unshift File.expand_path("../../lib", __FILE__)
require "language_pack"

if pack = LanguagePack.detect(ARGV[0], ARGV[1])
  pack.log("compile") do
    pack.compile
  end
end

BUILD_DIR = ARGV[0]
NODE_PATH = "#{BUILD_DIR}/bin/node"
CACHE_DIR = ARGV[1]

#Lineman stuff
require 'json'

class BuildLinemanApps
  include LanguagePack::ShellHelpers

  def build
    if File.exist?('lineman.json')
      p ARGV
      puts "Reading lineman.json configuration"
      config = JSON.parse(File.read('lineman.json'))
      puts "Config is: #{config}"
      puts "Installing Node"
      node_curl = "curl http://heroku-buildpack-nodejs.s3.amazonaws.com/nodejs-0.10.12.tgz -s -o - | tar xzf -"
      puts node_curl
      run(node_curl)
      npm_curl = "curl http://heroku-buildpack-nodejs.s3.amazonaws.com/npm-1.2.30.tgz -s -o - | tar xzf -"
      puts npm_curl
      run(npm_curl)
      run_npm("--version")
      linemen(config)
    else
      puts "no lineman.json configuration found"
    end
  end

  def run_npm command, home = BUILD_DIR
    cmd = "HOME=#{home} #{NODE_PATH} #{BUILD_DIR}/bin/npm-cli.js #{command}"
    puts cmd
    puts run cmd
  end

  def run_lineman(command, path)
    puts run("#{NODE_PATH} #{path}/node_modules/.bin/lineman #{command}")
  end

  def lineman_path(location)
    "#{BUILD_DIR}/#{location}"
  end

  def linemen(config)
    config.fetch("linemanApps").each do |app|
      build_lineman app.fetch("location")
      link_assets app.fetch("installToPath")
    end
  end

  #TODO cache npm installs for faster installs
  def build_lineman(location)
    path = lineman_path(location)
    raise "No Lineman App at #{location}" unless Dir.exist? path
    Dir.chdir(path) do
      run_npm("install --production")
      run_npm("rebuild")
      run_lineman("build", path)
    end
  end

  def link_assets destination
    raise "Asset destination expected but missing at #{destination}" unless Dir.exist? destination
    puts run("ln -fs #{destination}/js/app.min.js /app/frontend/dist/js/app.min.js")
  end
end

BuildLinemanApps.new.build
